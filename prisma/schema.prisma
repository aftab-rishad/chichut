// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model resetPassword {
  id        Int       @id @default(autoincrement())
  userId    Int       @unique
  token     String    @unique
  createdAt DateTime  @default(now())
  expiredAt DateTime?
  updatedAt DateTime  @updatedAt
}

model otp {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  email     String    @unique
  password  String
  otp       Int       @unique
  createdAt DateTime  @default(now())
  expiredAt DateTime?
  updatedAt DateTime  @updatedAt
}

model product {
  id          Int      @id @default(autoincrement())
  name        String
  brand       String
  size        Json
  color       Json
  description String
  category    String
  subCategory String
  stock       Int
  discount    Float    @default(0)
  price       Float
  images      Json
  isFeatured  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model brand {
  id          Int      @id @default(autoincrement())
  userId      Int      @unique
  name        String   @unique
  description String
  email       String   @unique
  location    String
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model cart {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  brandId   Int
  color     String
  size      String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model order {
  id             Int         @id @default(autoincrement())
  userId         Int
  brand          String
  address        String
  amount         Float
  city           String
  country        String
  countryCode    String
  email          String
  firstName      String
  lastName       String
  paymentMethod  String
  paymentStatus  Boolean
  phone          String
  postalCode     String
  shippingMethod String
  status         orderStatus
  product        Json
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model review {
  id        Int      @id @default(autoincrement())
  user      Json
  userId    Int
  productId Int
  rating    Int
  comment   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model room {
  id           Int      @id @default(autoincrement())
  vendorId     Int
  clientId     Int
  unreadVendor Int      @default(0)
  unreadClient Int      @default(0)
  createdAt    DateTime @default(now())
}

model message {
  id        Int      @id @default(autoincrement())
  content   String
  roomId    Int
  sender    sender
  createdAt DateTime @default(now())
}

model notification {
  id        Int      @id @default(autoincrement())
  userId    Int
  title     String
  message   String
  url       String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
}

enum sender {
  client
  vendor
}

enum orderStatus {
  Processing
  Shipped
  Delivered
  Cancelled
}
